[gd_resource type="VisualShader" load_steps=26 format=3 uid="uid://b83h4vneiqryn"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_4dlrs"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dbe0t"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0.2, 0.2, 0.2, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_1a25s"]
default_input_values = [0, 0.0, 1, 20.0]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_u78a6"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_p5n3o"]
function = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ye8wf"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_urnmc"]
default_input_values = [0, 0.0, 1, 1.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_f1s3w"]
default_input_values = [0, 0.0, 1, 3.0]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_grtr2"]
function = 0

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_r54en"]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_thvvi"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, 0.0]
op_type = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_cc6ij"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_remox"]
default_input_values = [0, 0.0, 1, 60.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4u8mk"]
default_input_values = [0, 0.0, 1, 20.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_getcy"]
function = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_3pc7c"]
default_input_values = [0, 0.0, 1, 100.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_3i8f4"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_b2hro"]
function = 9

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_gspqm"]
default_input_values = [0, 0.0, 1, 1.0]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_6blea"]
function = 16

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_sfrve"]
expanded_output_ports = [0]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jnrmi"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_b134k"]
function = 0

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_4qbad"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_u5vmx"]
op_type = 0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void vertex() {
// Input:2
	vec2 n_out2p0 = VERTEX;
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;


// Input:3
	float n_out3p0 = TIME;


// FloatOp:12
	float n_in12p1 = 20.00000;
	float n_out12p0 = n_out3p0 * n_in12p1;


// FloatFunc:4
	float n_out4p0 = sin(n_out12p0);


// FloatOp:15
	float n_in15p1 = 0.50000;
	float n_out15p0 = n_out3p0 * n_in15p1;


// FloatFunc:13
	float n_out13p0 = sin(n_out15p0);


// FloatFunc:18
	float n_out18p0 = ceil(n_out13p0);


// FloatOp:17
	float n_in17p1 = 1.00000;
	float n_out17p0 = n_out18p0 + n_in17p1;


// FloatFunc:16
	float n_out16p0 = log(n_out17p0);


// FloatOp:14
	float n_in14p1 = 100.00000;
	float n_out14p0 = n_out16p0 * n_in14p1;


// FloatOp:11
	float n_out11p0 = n_out4p0 * n_out14p0;


// FloatOp:10
	float n_out10p0 = n_out2p1 + n_out11p0;


// VectorCompose:9
	vec2 n_out9p0 = vec2(n_out10p0, n_out2p2);


	vec3 n_out8p0;
// If:8
	float n_in8p1 = 0.00000;
	float n_in8p2 = 0.00001;
	if(abs(n_out2p2 - n_in8p1) < n_in8p2)
	{
		n_out8p0 = vec3(n_out2p0, 0.0);
	}
	else if(n_out2p2 < n_in8p1)
	{
		n_out8p0 = vec3(n_out9p0, 0.0);
	}
	else
	{
		n_out8p0 = vec3(n_out2p0, 0.0);
	}


// Output:0
	VERTEX = vec2(n_out8p0.xy);


}

void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p4 = n_out2p0.a;


// Input:4
	float n_out4p0 = TIME;


// FloatOp:12
	float n_in12p1 = 20.00000;
	float n_out12p0 = n_out4p0 * n_in12p1;


// FloatFunc:3
	float n_out3p0 = sin(n_out12p0);


// FloatOp:5
	float n_in5p1 = 1.00000;
	float n_out5p0 = n_out12p0 + n_in5p1;


// FloatFunc:7
	float n_out7p0 = sin(n_out5p0);


// FloatOp:6
	float n_in6p1 = 3.00000;
	float n_out6p0 = n_out12p0 + n_in6p1;


// FloatFunc:8
	float n_out8p0 = sin(n_out6p0);


// VectorCompose:9
	vec4 n_out9p0 = vec4(n_out3p0, n_out7p0, n_out8p0, n_out2p4);


// VectorOp:11
	vec4 n_in11p1 = vec4(0.20000, 0.20000, 0.20000, 0.00000);
	vec4 n_out11p0 = n_out9p0 * n_in11p1;


// VectorOp:10
	vec4 n_out10p0 = n_out2p0 + n_out11p0;


// Output:0
	COLOR.rgb = vec3(n_out10p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(800, 240)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_sfrve")
nodes/vertex/2/position = Vector2(-200, -20)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_jnrmi")
nodes/vertex/3/position = Vector2(-1000, 300)
nodes/vertex/4/node = SubResource("VisualShaderNodeFloatFunc_b134k")
nodes/vertex/4/position = Vector2(-420, 320)
nodes/vertex/8/node = SubResource("VisualShaderNodeIf_4qbad")
nodes/vertex/8/position = Vector2(360, -80)
nodes/vertex/9/node = SubResource("VisualShaderNodeVectorCompose_u5vmx")
nodes/vertex/9/position = Vector2(240, 300)
nodes/vertex/10/node = SubResource("VisualShaderNodeFloatOp_cc6ij")
nodes/vertex/10/position = Vector2(20, 300)
nodes/vertex/11/node = SubResource("VisualShaderNodeFloatOp_remox")
nodes/vertex/11/position = Vector2(-220, 340)
nodes/vertex/12/node = SubResource("VisualShaderNodeFloatOp_4u8mk")
nodes/vertex/12/position = Vector2(-600, 320)
nodes/vertex/13/node = SubResource("VisualShaderNodeFloatFunc_getcy")
nodes/vertex/13/position = Vector2(-1000, 520)
nodes/vertex/14/node = SubResource("VisualShaderNodeFloatOp_3pc7c")
nodes/vertex/14/position = Vector2(-380, 600)
nodes/vertex/15/node = SubResource("VisualShaderNodeFloatOp_3i8f4")
nodes/vertex/15/position = Vector2(-1180, 480)
nodes/vertex/16/node = SubResource("VisualShaderNodeFloatFunc_b2hro")
nodes/vertex/16/position = Vector2(-600, 660)
nodes/vertex/17/node = SubResource("VisualShaderNodeFloatOp_gspqm")
nodes/vertex/17/position = Vector2(-800, 620)
nodes/vertex/18/node = SubResource("VisualShaderNodeFloatFunc_6blea")
nodes/vertex/18/position = Vector2(-1180, 720)
nodes/vertex/connections = PackedInt32Array(2, 2, 8, 0, 2, 0, 8, 3, 2, 0, 8, 4, 10, 0, 9, 0, 2, 2, 9, 1, 9, 0, 8, 5, 2, 1, 10, 0, 4, 0, 11, 0, 11, 0, 10, 1, 3, 0, 12, 0, 12, 0, 4, 0, 8, 0, 0, 0, 14, 0, 11, 1, 3, 0, 15, 0, 15, 0, 13, 0, 16, 0, 14, 0, 17, 0, 16, 0, 13, 0, 18, 0, 18, 0, 17, 0)
nodes/fragment/0/position = Vector2(1280, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_u78a6")
nodes/fragment/2/position = Vector2(-300, -80)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatFunc_p5n3o")
nodes/fragment/3/position = Vector2(-160, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_ye8wf")
nodes/fragment/4/position = Vector2(-1280, 260)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatOp_urnmc")
nodes/fragment/5/position = Vector2(-400, 480)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_f1s3w")
nodes/fragment/6/position = Vector2(-420, 640)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatFunc_grtr2")
nodes/fragment/7/position = Vector2(-120, 420)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatFunc_r54en")
nodes/fragment/8/position = Vector2(-120, 560)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorCompose_thvvi")
nodes/fragment/9/position = Vector2(180, 320)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_4dlrs")
nodes/fragment/10/position = Vector2(920, 160)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_dbe0t")
nodes/fragment/11/position = Vector2(680, 260)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_1a25s")
nodes/fragment/12/position = Vector2(-800, 440)
nodes/fragment/connections = PackedInt32Array(5, 0, 7, 0, 6, 0, 8, 0, 2, 4, 9, 3, 3, 0, 9, 0, 7, 0, 9, 1, 8, 0, 9, 2, 2, 0, 10, 0, 10, 0, 0, 0, 9, 0, 11, 0, 11, 0, 10, 1, 4, 0, 12, 0, 12, 0, 3, 0, 12, 0, 5, 0, 12, 0, 6, 0)
